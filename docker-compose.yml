# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana
version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker_volumes/data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: jobber_auth
      MYSQL_USER: jobber
      MYSQL_PASSWORD: api
      MYSQL_ROOT_PASSWORD: api
    ports:
      - 3306:3306
    volumes:
      - ./docker_volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: jobber_reviews
      POSTGRES_USER: jobber
      POSTGRES_PASSWORD: api
    ports:
      - 5432:5432
    volumes:
      - ./docker_volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13.1-management
    restart: always
    ports:
      # AMQP protocal port
      - 5672:5672
      # Management UI
      - 15672:15672
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    restart: always
    environment:
      ES_JAVA_OPTS: -Xms1g -Xms1g
      bootstrap.memory_lock: true
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.auth.api_key.enabled: true
      xpack.monitoring.collection.enabled: true
      xpack.security.enrollment.enabled: true
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker_volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.13.2
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

networks:
  elastic:
    name: elastic
